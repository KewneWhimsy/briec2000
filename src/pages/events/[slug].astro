---
import Layout from '../../layouts/layout.astro';
import OptimizeImage from '../../components/optimize_image.astro';
import { getCollection } from 'astro:content';
import type { EventEntry, Price } from '../../../types';
import Ghost from '../../components/ghost.astro';

// Générer toutes les routes pour les événements
export async function getStaticPaths() {
  const eventsEntries = await getCollection('events') as EventEntry[];
  return eventsEntries.map((entry: EventEntry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

// Définissez explicitement le type de props
interface Props {
  entry: EventEntry;
}

// Récupérer l'événement spécifique
const { entry } = Astro.props as Props;
const contentRender = await entry.render();
const { Content } = contentRender;

// Formater la date en français
function formatDate(date: Date | string): string {
  const dateObj = date instanceof Date ? date : new Date(date);
  const options: Intl.DateTimeFormatOptions = { 
    weekday: 'long', 
    year: 'numeric', 
    month: 'long', 
    day: 'numeric' 
  };
  return dateObj.toLocaleDateString('fr-FR', options);
}
---

<Layout title={`${entry.data.title} - Briec2000`}>
  <article class="max-w-3xl">
    <header>
      <h1 class="mb-4">{entry.data.title}</h1>
      <p class="text-lg mb-2">
        <time datetime={entry.data.date.toISOString()}>
          {formatDate(entry.data.date)}
        </time>
      </p>
      <p class="mb-2"><strong>Lieu :</strong> {entry.data.location}</p>
      <p><strong>Horaires :</strong> {entry.data.time}</p>
    </header>

    {entry.data.image && (
      <div class="my-8">
        <OptimizeImage 
          src={entry.data.image} 
          alt={entry.data.title} 
          class="w-full h-auto rounded-lg shadow-md"
          transition:name={`event-image-${entry.slug}`}
        />
      </div>
    )}

    {entry.data.price && entry.data.price.length > 0 && (
      <div class="card my-8 p-4 max-w-fit">
        <h2 class="text-xl mb-4">Tarifs</h2>
        <ul class="list-disc ml-6 leading-relaxed">
          {entry.data.price.map((price: Price) => (
            <li>{price.name}: {price.amount > 0 ? `${price.amount}€` : 'Gratuit'}</li>
          ))}
        </ul>
      </div>
    )}

    <div class="event-content prose mb-12">
      <Content />
    </div>

    <div class="flex justify-between items-center mt-12">
      <a href="/events/" class="btn">Tous les événements</a>
      <a href="/" class="btn">Retour à l'accueil</a>
    </div>
  </article>
  <Ghost 
    className="hidden md:block rotate-y-180"
    style="top: 8%; right: 8%;"
  />
</Layout>