---
import Layout from '../layouts/layout.astro';
import OptimizeImage from '../components/optimize_image.astro';
import { getCollection } from 'astro:content';
import type { EventEntry, CantineEntry, Price } from '../../types';
import MenuCantine from '../components/menu_cantine.astro';

// Récupérer tous les événements
const allEvents = await getCollection('events') as EventEntry[];
const currentDate = new Date();

// Filtrer pour ne montrer que les événements à venir et non brouillons
const upcomingEvents = allEvents
  .filter((event: EventEntry) => {
    // Vérifier si date existe et convertir en Date si c'est une string
    const eventDate = event.data.date instanceof Date ? 
      event.data.date : 
      new Date(event.data.date);
      
    return eventDate > currentDate && event.data.draft !== true;
  })
  .sort((a: EventEntry, b: EventEntry) => {
    const dateA = a.data.date instanceof Date ? a.data.date : new Date(a.data.date);
    const dateB = b.data.date instanceof Date ? b.data.date : new Date(b.data.date);
    return dateA.getTime() - dateB.getTime();
  });

// Récupérer le prochain événement
const nextEvent = upcomingEvents.length > 0 ? upcomingEvents[0] : null;

// Trouver la prochaine cantine
const nextCantine = upcomingEvents.find((event: EventEntry) => 
  event.data.title.toLowerCase().includes('cantine')
);

// Récupérer les informations générales sur les cantines
const cantinesCollection = await getCollection('cantines') as CantineEntry[];
const cantineInfo = cantinesCollection.find((entry: CantineEntry) => 
  entry.data.title === "Cantines Mensuelles"
);

// Préparer le contenu Markdown pour l'affichage si un événement existe
let Content;
if (nextEvent) {
  const contentRender = await nextEvent.render();
  Content = contentRender.Content;
}

// Formater la date en français
function formatDate(date: Date | string): string {
  const dateObj = date instanceof Date ? date : new Date(date);
  const options: Intl.DateTimeFormatOptions = { 
    weekday: 'long', 
    year: 'numeric', 
    month: 'long', 
    day: 'numeric' 
  };
  return dateObj.toLocaleDateString('fr-FR', options);
}
---

<Layout title="Briec2000 - Association locale">
  <!-- Wrapper flex pour la mise en page desktop -->
  <div class="lg:flex lg:gap-8 xl:gap-20 lg:items-start">
    <!-- Contenu principal avec max-width -->
    <div class="lg:flex-1 max-w-3xl">
      <h1 class="mb-8">Briec2000</h1>
      
      <p class="text-lg mb-6">
        Association locale à Briec-de-l'Odet (29510) organisant des événements communautaires et culturels.
      </p>
      
      {/* Menu du mois en version mobile - s'affiche avant l'événement */}
      {nextCantine && (
        <div class="xl:hidden mt-8 mb-10">
          <MenuCantine cantineEvent={nextCantine} isDesktop={false} />
        </div>
      )}
      
      {/* Section événement principal */}
      {nextEvent && (
        <div class="mb-6">
          <h2 class="mb-6 border-b pb-2">À venir : {nextEvent.data.title}</h2>
          <article>
            <header class="mb-6">
              <p class="text-lg mb-2">
                <strong>Date :</strong> <time datetime={nextEvent.data.date.toISOString()}>
                  {formatDate(nextEvent.data.date)}
                </time>
              </p>
              <p class="mb-2"><strong>Lieu :</strong> {nextEvent.data.location}</p>
              <p><strong>Horaires :</strong> {nextEvent.data.time}</p>
            </header>

            {nextEvent.data.image && (
              <div class="mb-6">
                <OptimizeImage 
                  src={nextEvent.data.image} 
                  alt={nextEvent.data.title} 
                  class="w-full h-auto rounded-lg shadow-md"
                />
              </div>
            )}

            {nextEvent.data.price && nextEvent.data.price.length > 0 && (
              <div class="card mb-8 p-4">
                <h2 class="text-xl mb-4">Tarifs</h2>
                <ul class="list-disc ml-6">
                  {nextEvent.data.price.map((price: Price) => (
                    <li>{price.name}: {price.amount > 0 ? `${price.amount}€` : 'Gratuit'}</li>
                  ))}
                </ul>
              </div>
            )}

            {Content && (
              <div class="event-content-in-page event-content prose mb-8">
                <Content />
              </div>
            )}

            <div class="text-center mt-6">
              <a href="/events/" class="btn">
                Voir tous les événements à venir
              </a>
            </div>
          </article>
        </div>
      )}
      
      <div class="flex flex-col gap-4 pt-6 text-center">
        <p>
          <strong>Contact :</strong> 
          <span class="email-copy">briec2000@emailasso.net</span>
        </p>
        <div>
          <a href="/about/" class="btn">En savoir plus sur l'association</a>
        </div>
      </div>
    </div>
    
    {/* Menu du mois en version desktop - s'affiche à droite */}
    {nextCantine && (
      <div class="hidden xl:block lg:w-80 xl:w-96 lg:relative">
        <MenuCantine cantineEvent={nextCantine} isDesktop={true} />
      </div>
    )}
  </div>
</Layout>