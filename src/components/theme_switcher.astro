---
// src/components/theme_switcher.astro
// Un composant amélioré pour basculer entre 4 thèmes avec des représentations visuelles

// Définir les thèmes disponibles avec leurs couleurs caractéristiques
const themes = [
  {
    id: "ocean",
    name: "Océan",
    type: "light",
    bgColor: "#edf2f7",
    primaryColor: "#1a4d7c"
  },
  {
    id: "nature",
    name: "Nature",
    type: "light",
    bgColor: "#eef5ee",
    primaryColor: "#2e6b4a"
  },
  {
    id: "midnight",
    name: "Minuit",
    type: "dark",
    bgColor: "#1f2937",
    primaryColor: "#6889c2"
  },
  {
    id: "forest",
    name: "Forêt",
    type: "dark",
    bgColor: "#1a2721",
    primaryColor: "#8fb996"
  },
];
---

<div class="theme-switcher">
  {
    themes.map((theme) => (
      <button
        class="theme-btn"
        data-theme={theme.id}
        title={theme.name}
        aria-label={`Thème ${theme.name}`}
        style={`background-color: ${theme.bgColor}; border-color: ${theme.primaryColor};`}
      >
        <span class="theme-accent" style={`background-color: ${theme.primaryColor};`}></span>
      </button>
    ))
  }
</div>

<script>
  // Script côté client pour changer le thème
  document.addEventListener("DOMContentLoaded", () => {
    const themeButtons = document.querySelectorAll(".theme-btn");
    
    // Récupérer le thème actuel depuis l'attribut data-theme sur html
    const currentTheme = document.documentElement.getAttribute("data-theme");
    
    // Mettre à jour l'UI pour montrer le thème actif
    if (currentTheme) {
      themeButtons.forEach((btn) => {
        if (btn.getAttribute("data-theme") === currentTheme) {
          btn.classList.add("active");
        } else {
          btn.classList.remove("active");
        }
      });
    }

    // Ajouter les écouteurs d'événements pour le changement de thème
    themeButtons.forEach((button) => {
      const themeId = button.getAttribute("data-theme");

      if (themeId !== null) {
        button.addEventListener("click", () => {
          // Mettre à jour la classe active
          themeButtons.forEach((btn) => btn.classList.remove("active"));
          button.classList.add("active");
          
          // Appliquer le thème
          document.documentElement.setAttribute("data-theme", themeId);
          localStorage.setItem("selected-theme", themeId);
        });
      }
    });
  });
</script>

<style>
  .theme-switcher {
    display: flex;
    gap: 6px;
  }

  .theme-btn {
    width: 28px;
    height: 28px;
    border-radius: 50%;
    cursor: pointer;
    border: 2px solid transparent;
    position: relative;
    transition: all 0.2s ease;
    padding: 0;
    overflow: hidden;
  }

  .theme-btn .theme-accent {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 30%;
    border-radius: 0 0 50% 50%;
  }

  .theme-btn.active {
    transform: scale(1.1);
    box-shadow: 0 0 0 2px var(--color-accent);
  }
</style>